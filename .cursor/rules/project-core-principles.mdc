---
alwaysApply: true
description: "定义了项目的核心工作原则，特别是“MVP守门员”规则，以确保代码质量和迭代速度。"
---
# 核心工作原则 (Core Principles)

> **目标**：在保证“不重复推送 & 快速迭代”的前提下，用最小复杂度交付业务价值。

## 1. MVP 守门员 (The MVP Gatekeeper)

任何代码改动 **必须** 通过以下 5 条核心原则，否则不得合并。

| # | 原则 | 目的 |
|---|---|---|
| 1 | **数据唯一源** | 业务状态只写入 **PostgreSQL** 数据库，以防止数据不一致和重复推送。 |
| 2 | **幂等推送** | 推送逻辑 (例如 `pushReviewUpdate`) 必须检查是否已推送 (`is_pushed`)，并在成功后立即更新状态，避免重复消息。 |
| 3 | **单一入口** | 所有评论推送必须经过统一的队列 (如 **PushQueue**)。用于验证的脚本需要添加明确的标记 (如 `isVerification`)，以消除多入口混乱。 |
| 4 | **自动回归测试** | CI/CD 流水线必须运行单元测试和集成测试，且必须包含针对“重复推送”场景的测试用例，防止问题回归。 |
| 5 | **监控与告警** | 必须有基本的监控，例如，当短期内消息量异常（如 1 分钟内 >30 条）时，应触发告警，以便及时发现异常。 |

## 2. 工作流原则 (Workflow Principles)

*   **最小化、原子化的PR**: 坚持提交小的、专注的 Pull Requests (建议 ≤ 400 行代码)。功能、重构、格式化等不同类型的修改应在不同的 PR 中提交。
*   **先规划再编码**: 在开始具体任务前，花时间写一个简短的任务说明（Task Note），明确动机和验收标准。