---
description: "提供一套标准的问题修复流程，包括复现问题、定位根源、制定方案、编写测试、实施修复和验证监控，以确保修复的质量和完整性。"
---
# 问题修复方法论 (Issue Fixing Methodology)

为高效、彻底地解决问题并防止其复发，请遵循以下流程。这符合先全面思考再执行的原则。

1.  **复现问题 (Reproduce)**:
    *   稳定地复现问题是解决问题的第一步。如果无法复现，需要通过增强日志来收集更多信息。

2.  **定位根源 (Root Cause Analysis)**:
    *   仔细检查 `logs/` 目录下的相关日志，特别是 `error.log`。
    *   使用调试器或在关键路径添加临时日志，深入代码执行流程，找到问题的根本原因，而不只是修复表面症状。

3.  **制定方案 (Plan the Fix)**:
    *   设计一个清晰、简单的解决方案。
    *   评估修复可能带来的副作用，尤其是在核心模块中。
    *   对于复杂的修复，建议先在文档或注释中写下解决思路。

4.  **编写测试 (Write a Test)**:
    *   在修复代码之前，先编写一个能够暴露该问题的单元测试或集成测试。此测试在初始阶段应为失败状态。
    *   这不仅能验证修复是否有效，还能防止未来相同问题的再次发生。

5.  **实施修复 (Implement)**:
    *   编写代码修复问题，并确保新增的测试能够通过。
    *   保持代码风格与项目一致。

6.  **验证与监控 (Verify & Monitor)**:
    *   在开发和预发布环境中充分验证修复。
    *   部署后，密切关注相关监控和日志，确保问题已彻底解决且未引入新问题。