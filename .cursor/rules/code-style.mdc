---
globs: "*.ts,*.tsx"
description: "为 TypeScript 代码提供编码风格指南，涵盖命名约定、函数风格、注释和错误处理，以确保代码的一致性和可读性。"
---
# 代码风格 (Code Style)

代码风格需服务于项目的核心目标：“在保证‘不重复推送 & 快速迭代’的前提下，用最小复杂度交付业务价值”。

保持一致的代码风格可以提高代码的可读性和可维护性。

*   **遵循现有规范**:
    *   坚持使用 TypeScript 的强类型来保证代码质量。
    *   确保代码在提交前通过所有的 lint 和 format 检查。

*   **命名**:
    *   变量和函数名使用 `camelCase` (小驼峰)。
    *   类、接口、类型别名使用 `PascalCase` (大驼峰)。
    *   命名应清晰、有描述性，避免使用模糊的缩写。

*   **函数**:
    *   保持函数短小精悍，专注于单一功能（单一职责原则）。
    *   优先使用 `async/await` 处理异步操作，并用 `try...catch` 妥善处理错误。

*   **注释**:
    *   只为复杂的业务逻辑、算法或可能引起困惑的代码添加注释。
    *   代码本身应尽可能自解释。注释应解释“为什么”这么做，而不是“代码做了什么”。

*   **错误处理**:
    *   明确地处理每一个可能的错误路径，不要忽略 `Promise` 的 `catch` 块。
    *   抛出的错误信息应足够清晰，包含上下文，便于快速定位问题。